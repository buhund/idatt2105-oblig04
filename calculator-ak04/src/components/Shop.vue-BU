<script lang="ts">
import { defineComponent, ref, computed } from 'vue';

interface Variant {
  id: number;
  image: string;
  quantity: number;
}

interface Product {
  name: string;
  brand: string;
  details: string[];
  variants: Variant[];
}

export default defineComponent({
  setup() {
    const products = ref<Product[]>([
      {
        name: 'Indexus Accusus',
        brand: 'Sveratus Filangis',
        details: ['110% Authentic', 'Blessed', 'Holy', 'Collectors Edition'],
        id: 1001,
        image: '@/assets/shop/finger-01-premium.png',
        quantity: 3
      },
      {
        name: 'Tomulus Tottus',
        brand: 'Sveratus Filangis',
        details: ['Very Authentic', 'Blessed', 'Holy', 'Absolves Sin'],
        id: 1002,
        image: '@/assets/shop/finger-02-medium.png',
        quantity: 11
      },
      {
        name: 'Nino Filangis',
        brand: 'Sveratus Filangis',
        details: ['Authentic', 'Blessed', 'Holy', 'May Heal Consumption'],
        id: 1003,
        image: '@/assets/shop/finger-03-low.png',
        quantity: 9
      },
  ]);

    function addToCart(productId: number, variantId: number) {
      // Implementation for adding to cart
      console.log(`Product ${productId} with Variant ${variantId} added to cart`);
    }


    const title = computed(() => `${products.value[0].brand} ${products.value[0].name}`);
    const image = computed(() => products.value[0].image);
    const inStock = computed(() => products.value[0].quantity > 0);
    const title = computed(() => brand.value + ' ' + product.value);

    return {
      product,
      brand,
      details,
      title,
      image,
      inStock,
      addToCart,

    };
  },
});


</script>

<template>
  <div class="shop-container">
    <div class="product-display" v-for="product in products" :key="product.name">
      <div class="product-info">
        <h3>{{ product.brand }} {{ product.name }}</h3>
        <p v-if="inStock">In Stock</p>
        <p v-else>Out of Stock</p>
        <ul>
          <li v-for="detail in product.details" :key="detail">{{ detail }}</li>
        </ul>
      </div>
      <div class="product-image">
        <img :src="image">
      </div>
    </div>
  </div>
</template>


<style scoped>

.shop-container {
  width: 100%;
  max-height: 98vh;
  overflow-y: auto;
  padding-top: 22px;
  margin: 0 auto;
  padding-left: 8px;
  padding-right: 8px;
  display: flex;
  background-color: rgba(215, 215, 215, 0.86);
  border: 2px solid #222222;
  align-content: flex-start;
}

.product-image,
.product-info {
  width: 50%;
}

body {
  background-color: #f2f2f2;
  margin: 0px;
  color: #282828;
}

.button {
  margin: 30px;
  background-color: #39495c;
  border-radius: 5px;
  font-size: 18px;
  width: 160px;
  height: 60px;
  color: white;
  padding: 20px;
  box-shadow: inset 0 -0.6em 1em -0.35em rgba(0, 0, 0, 0.17),
  inset 0 0.6em 2em -0.3em rgba(255, 255, 255, 0.15),
  inset 0 0 0em 0.05em rgba(255, 255, 255, 0.12);
  text-align: center;
  cursor: pointer;
}

.cart {
  margin: 25px 100px;
  float: right;
  border: 1px solid #d8d8d8;
  padding: 30px 30px;
  background-color: white;
  -webkit-box-shadow: 0px 2px 15px -12px rgba(0, 0, 0, 0.57);
  -moz-box-shadow: 0px 2px 15px -12px rgba(0, 0, 0, 0.57);
  box-shadow: 2px 15px 12px rgba(0, 0, 0, 0.57);
}

.color-circle {
  width: 50px;
  height: 50px;
  margin-top: 8px;
  border: 2px solid #d8d8d8;
  border-radius: 50%;
}


.disabledButton {
  background-color: #d8d8d8;
  cursor: not-allowed;
}

h1 {
  font-size: 50px;
}

h3 {
  font-size: 25px;
}

img {
  border: 2px solid #d8d8d8;
  width: 70%;
  margin: 40px;
  padding: 15px;
  -webkit-box-shadow: 0px 2px 15px -12px rgba(0, 0, 0, 0.57);
  -moz-box-shadow: 0px 2px 15px -12px rgba(0, 0, 0, 0.57);
  box-shadow: 2px 15px 12px rgba(0, 0, 0, 0.57);
}

input {
  width: 100%;
  height: 40px;
  margin-bottom: 20px;
}

label {
  font-size: 20px;
  margin-bottom: 5px;
}

li {
  font-size: 18px;
}

.nav-bar {
  background: linear-gradient(-90deg, #84cf6a, #16c0b0);
  height: 60px;
  margin-bottom: 25px;
  -webkit-box-shadow: 0px 2px 15px -12px rgba(0, 0, 0, 0.57);
  -moz-box-shadow: 0px 2px 15px -12px rgba(0, 0, 0, 0.57);
  box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.57);
}

.out-of-stock-img {
  opacity: 0.5;
}

p {
  font-size: 22px;
}

.product-display {
  display: flex;
  flex-direction: column;
  padding: 1rem;
}

.product-container {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}

.product-image,
.product-info {
  width: 50%;
}

.review-form {
  display: flex;
  flex-direction: column;
  width: 425px;
  padding: 20px;
  margin: 40px;
  border: 2px solid #d8d8d8;
  background-color: white;
  -webkit-box-shadow: 0px 2px 15px -12px rgba(0, 0, 0, 0.57);
  -moz-box-shadow: 0px 2px 15px -12px rgba(0, 0, 0, 0.57);
  box-shadow: 2px 15px -12px rgba(0, 0, 0, 0.57);
}

.review-container {
  width: 425px;
  padding: 20px;
  background-color: white;
  -webkit-box-shadow: 0px 2px 20px -12px rgba(0, 0, 0, 0.57);
  -moz-box-shadow: 0px 2px 20px -12px rgba(0, 0, 0, 0.57);
  box-shadow: 2px 20px -12px rgba(0, 0, 0, 0.57);
  margin-left: 40px;
  border: 2px solid #d8d8d8;
}

.review-container li {
  margin-bottom: 30px;
}

.review-form .button {
  display: block;
  margin: 30px auto;
}

select {
  height: 40px;
  font-size: 20px;
  background-color: white;
  cursor: pointer;
}

textarea {
  width: 95%;
  height: 70px;
  padding: 10px;
  font-size: 20px;
  margin-bottom: 20px;
}

ul {
  list-style-type: none;
}


@media (min-width: 1024px) {
  .about {
    min-height: 80vh;
    display: flex;
    align-items: flex-start;
  }
}


</style>
